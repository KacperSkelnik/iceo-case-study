services:
  rabbitmq:
    image: rabbitmq:3.11.10-management-alpine
    container_name: 'rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 20s
      retries: 5
    networks:
      - rabbitmq_scala

  producer:
    build:
      dockerfile: Dockerfile
    container_name: 'producer'
    environment:
      - MAIN_CLASS=pl.kacske.RabbitProducer
      - FILE_PATH=test.csv
      - MODULO_DIVIDER=5
      - RABBIT_HOST=rabbitmq
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rabbitmq_scala

  consumer:
    build:
      dockerfile: Dockerfile
    container_name: 'consumer'
    environment:
      - MAIN_CLASS=pl.kacske.RabbitWebSocketService
      - RABBIT_HOST=rabbitmq
      - RABBIT_USERNAME=guest
      - RABBIT_PASSWORD=guest
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - rabbitmq_scala

networks:
  rabbitmq_scala: {}